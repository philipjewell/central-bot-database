---
name: Sync and Enrich Bot Database

on:
  schedule:
    - cron: '0 2 * * 0'  # Weekly on Sunday at 2 AM UTC
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: write
  pull-requests: write

jobs:
  fetch-and-merge:
    name: Phase 1 - Fetch and Merge
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Pull from ai.robots.txt
        run: |
          python scripts/fetch_ai_robots.py
        continue-on-error: true
      
      - name: Pull from Cloudflare Radar
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          python scripts/fetch_cloudflare_radar.py
        continue-on-error: true
      
      - name: Merge and deduplicate
        run: |
          python scripts/merge_sources.py
      
      - name: Upload staging artifacts
        uses: actions/upload-artifact@v3
        with:
          name: staging-merged
          path: staging/
          retention-days: 1

  enrich-with-ai:
    name: Phase 2 - AI Enrichment
    needs: fetch-and-merge
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Download staging artifacts
        uses: actions/download-artifact@v3
        with:
          name: staging-merged
          path: staging/
      
      - name: Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          
      - name: Start Ollama service
        run: |
          ollama serve &
          sleep 10
          
      - name: Pull Ollama model
        run: |
          ollama pull llama3.2
          echo "Model pulled successfully"
          
      - name: Verify Ollama is running
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:11434/api/tags > /dev/null; then
              echo "Ollama is ready!"
              break
            fi
            echo "Waiting for Ollama... attempt $i/10"
            sleep 5
          done
          curl http://localhost:11434/api/tags
      
      - name: Enrich with AI descriptions
        run: |
          echo "Starting AI enrichment..."
          python scripts/enrich_with_ai.py
          echo "AI enrichment completed!"
      
      - name: Upload enriched artifacts
        uses: actions/upload-artifact@v3
        with:
          name: staging-enriched
          path: staging/
          retention-days: 1

  generate-and-validate:
    name: Phase 3 - Generate Outputs
    needs: enrich-with-ai
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Download enriched artifacts
        uses: actions/download-artifact@v3
        with:
          name: staging-enriched
          path: staging/
      
      - name: Generate outputs
        run: |
          python scripts/generate_outputs.py
      
      - name: Validate outputs
        run: |
          python scripts/validate_data.py
      
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      
      - name: Commit generated outputs
        run: |
          git add data/bots.json docs/BOTS.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_ENV
          else
            git commit -m "chore: update bot database [skip ci]"
            echo "has_changes=true" >> $GITHUB_ENV
          fi
      
      - name: Create Pull Request
        if: env.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bot-sync-${{ github.run_number }}
          delete-branch: true
          title: 'Weekly Bot Database Update'
          body: |
            ## Bot Database Sync
            
            This PR contains updates to the bot database from:
            - ai.robots.txt repository
            - Cloudflare Radar API (if available)
            - Local manual entries
            
            ### What Changed
            - ✅ Fetched latest bot data
            - ✅ Merged and deduplicated entries
            - ✅ AI-enriched descriptions and recommendations
            - ✅ Generated JSON and Markdown outputs
            - ✅ Validated all data
            
            ### Review Checklist
            - [ ] Verify new bots have accurate descriptions
            - [ ] Check category recommendations make sense
            - [ ] Review any new operators
            - [ ] Ensure technical details are present
            
            **Auto-generated by GitHub Actions**
            
            Run number: ${{ github.run_number }}
            Workflow: ${{ github.workflow }}
          labels: |
            automated
            bot-database
          draft: false
      
      - name: Workflow Summary
        if: always()
        run: |
          echo "## Workflow Complete! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ env.has_changes }}" == "true" ]; then
            echo "✅ Changes detected and PR created" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Files Generated" >> $GITHUB_STEP_SUMMARY
          echo "- \`data/bots.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`docs/BOTS.md\`" >> $GITHUB_STEP_SUMMARY
